{"version":3,"sources":["components/QuoteText.jsx","components/QuoteAuthor.jsx","components/TweetLink.jsx","components/NewQuoteBtn.jsx","components/QuoteBox.jsx","App.js","index.js"],"names":["QuoteText","props","style","color","id","className","quote","QuoteAuthor","author","TweetLink","title","target","href","rel","NewQuoteBtn","backgroundColor","onClick","handleClick","QuoteBox","state","quotes","randomIndex","loading","bind","this","setState","Math","floor","random","fetch","then","response","json","data","isLoading","i","Component","App","ReactDOM","render","document","getElementById"],"mappings":"iQAUeA,MARf,SAAmBC,GACjB,OACE,uBAAGC,MAAO,CAAEC,MAAOF,EAAME,OAASC,GAAG,OAAOC,UAAU,cACnDJ,EAAMK,QCKEC,MARf,SAAqBN,GACnB,OACE,uBAAGC,MAAO,CAAEC,MAAOF,EAAME,OAASC,GAAG,SAASC,UAAU,UAAxD,IACIJ,EAAMO,SCYCC,MAff,SAAmBR,GACjB,OACE,uBACES,MAAM,cACNC,OAAO,SACPC,KAAI,gDAA2CX,EAAMK,MAAjD,cAA4DL,EAAMO,QACtEJ,GAAG,cACHS,IAAI,sBACJR,UAAU,eAEV,uBAAGH,MAAO,CAAEC,MAAOF,EAAME,OAASE,UAAU,4BCGnCS,MAbf,SAAqBb,GACnB,OACE,4BACEC,MAAO,CAAEa,gBAAiBd,EAAME,OAChCa,QAASf,EAAMgB,YACfb,GAAG,YACHC,UAAU,iBAJZ,c,iBC+DWa,E,YA5Db,WAAYjB,GAAQ,IAAD,8BACjB,4CAAMA,KACDkB,MAAQ,CACXC,OAAQ,GACRC,YAAa,EACbC,SAAS,GAEX,EAAKL,YAAc,EAAKA,YAAYM,KAAjB,gBAPF,E,2EAUjBC,KAAKC,SAAS,CACZJ,YAAaK,KAAKC,MAAsB,IAAhBD,KAAKE,c,0CAGZ,IAAD,OAClBC,MACE,0IAECC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,EAAKR,SAAS,CACZL,OAAQa,EAAKb,OACbE,SAAS,EACTD,YAAaK,KAAKC,MAAsB,IAAhBD,KAAKE,iB,+BAKnC,GAAIJ,KAAKL,MAAMG,QACb,OACE,6BAEE,kBAAC,IAAD,CAAkBY,WAAW,KAOjC,IAFA,IACI/B,EAAQ,IACHgC,EAAI,EAAGA,EAAI,EAAGA,IACrBhC,GAHY,mBAGKuB,KAAKC,MAAsB,GAAhBD,KAAKE,WAL9B,IAQGP,EAAgBG,KAAKL,MAArBE,YACAf,EAAUkB,KAAKL,MAAMC,OAAOC,GAA5Bf,MACAE,EAAWgB,KAAKL,MAAMC,OAAOC,GAA7Bb,OACR,OACE,yBAAKJ,GAAG,YAAYC,UAAU,aAC5B,kBAAC,EAAD,CAAWF,MAAOA,EAAOG,MAAOA,IAChC,kBAAC,EAAD,CAAaH,MAAOA,EAAOK,OAAQA,IACnC,yBAAKH,UAAU,SACb,kBAAC,EAAD,CAAWF,MAAOA,EAAOG,MAAOA,EAAOE,OAAQA,IAC/C,kBAAC,EAAD,CAAaL,MAAOA,EAAOc,YAAaO,KAAKP,oB,GArDlCmB,a,MCMRC,MARf,WACE,OACE,yBAAKhC,UAAU,OACb,kBAAC,EAAD,QCFNiC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7da4d0d6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction QuoteText(props) {\r\n  return (\r\n    <p style={{ color: props.color }} id=\"text\" className=\"quote_text\">\r\n      {props.quote}\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default QuoteText;\r\n","import React from \"react\";\r\n\r\nfunction QuoteAuthor(props) {\r\n  return (\r\n    <p style={{ color: props.color }} id=\"author\" className=\"author\">\r\n      -{props.author}\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default QuoteAuthor;\r\n","import React from \"react\";\r\n\r\nfunction TweetLink(props) {\r\n  return (\r\n    <a\r\n      title=\"tweet quote\"\r\n      target=\"_blank\"\r\n      href={`https://twitter.com/intent/tweet?text=${props.quote} - ${props.author}`}\r\n      id=\"tweet-quote\"\r\n      rel=\"noopener noreferrer\"\r\n      className=\"tweet-quote\"\r\n    >\r\n      <i style={{ color: props.color }} className=\"fab fa-twitter-square\"></i>\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default TweetLink;\r\n","import React from \"react\";\r\n\r\nfunction NewQuoteBtn(props) {\r\n  return (\r\n    <button\r\n      style={{ backgroundColor: props.color }}\r\n      onClick={props.handleClick}\r\n      id=\"new-quote\"\r\n      className=\"new-quote-btn\"\r\n    >\r\n      New Quote\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default NewQuoteBtn;\r\n","import React, { Component } from \"react\";\r\nimport QuoteText from \"./QuoteText\";\r\nimport QuoteAuthor from \"./QuoteAuthor\";\r\nimport TweetLink from \"./TweetLink\";\r\nimport NewQuoteBtn from \"./NewQuoteBtn\";\r\nimport LoadingAnimation from \"react-circle-loading-animation\";\r\nclass QuoteBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      quotes: [],\r\n      randomIndex: 0,\r\n      loading: true\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  handleClick() {\r\n    this.setState({\r\n      randomIndex: Math.floor(Math.random() * 101)\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    fetch(\r\n      \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\r\n    )\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({\r\n          quotes: data.quotes,\r\n          loading: false,\r\n          randomIndex: Math.floor(Math.random() * 101)\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return (\r\n        <div>\r\n          {/* LOADING CIRCLE ON LOADING */}\r\n          <LoadingAnimation isLoading={true} />\r\n        </div>\r\n      );\r\n    } else {\r\n      // ----- GET A RANDOM HEX COLOR BELOW-----\r\n      var letters = \"0123456789ABCDEF\";\r\n      var color = \"#\";\r\n      for (var i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n      }\r\n      // ----- GET A RANDOM HEX COLOR ABOVE-----\r\n      const { randomIndex } = this.state;\r\n      const { quote } = this.state.quotes[randomIndex];\r\n      const { author } = this.state.quotes[randomIndex];\r\n      return (\r\n        <div id=\"quote-box\" className=\"quote-box\">\r\n          <QuoteText color={color} quote={quote} />\r\n          <QuoteAuthor color={color} author={author} />\r\n          <div className=\"links\">\r\n            <TweetLink color={color} quote={quote} author={author} />\r\n            <NewQuoteBtn color={color} handleClick={this.handleClick} />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default QuoteBox;\r\n","import React from \"react\";\nimport QuoteBox from \"./components/QuoteBox\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <QuoteBox />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}